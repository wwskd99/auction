<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Hikari CP 설정 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl" value="jdbc:log4jdbc:mysql://mysql8.c04cs8zbhwia.ap-northeast-2.rds.amazonaws.com:3306/auction?useSSL=false&amp;allowPublicKeyRetrieval=true"></property>
		<property name="username" value="admin"></property>
		<property name="password" value="8ehd805gh"></property>
	</bean>
	
	<!-- DataSource 빈을 등록
	destroy-method : CP을 반납하는 방법을 지정 : close() 메소드를 호출
	 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<!-- 생성자 매개변수를 이용해서 파라미터 값을 설정 -->
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	<!-- MyBatis로 데이터베이스를 사용하기  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 매퍼 인터페이스를 scan을 해준다. -->
	<mybatis-spring:scan base-package="org.zerock.mapper"/>
	
	<!-- Service를 component-scan을 추가
	namespace context를 추가해야 context prefix를 사용할 수 있음
	 -->
	<context:component-scan base-package="org.zerock.service"></context:component-scan>
	
	<!-- AOP 설정 -->
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="org.zerock.aop"></context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 트랜잭션 처리를 위해 추가 -->
	<!-- 트랜잭션 처리를 하는 객체 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven/>
	<task:annotation-driven/>
	<context:component-scan base-package="org.zerock.task"></context:component-scan>
</beans>
